{
  "openapi": "3.0.3",
  "info": {
    "title": "Media Education API",
    "version": "0.1.0"
  },
  "servers": [
    { "url": "http://localhost:3000/v1" },
    { "url": "https://media-education-api.vercel.app/v1" }
  ],
  "paths": {
    "/accounts": {
      "post": {
        "tags": ["Accounts"],
        "summary": "Create account",
        "description": "Create a new account",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fullname": {
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string"
                  },
                  "role": {
                    "type": "string",
                    "enum": ["ADMIN", "USER"]
                  },
                  "phone": {
                    "type": "string",
                    "example": "6285123456789"
                  },
                  "address": {
                    "type": "string"
                  },
                  "birthdate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "company": {
                    "type": "string"
                  },
                  "gender": {
                    "type": "string",
                    "enum": ["LAKI_LAKI", "PEREMPUAN"]
                  }
                },
                "required": [
                  "fullname",
                  "username",
                  "email",
                  "password",
                  "role"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Account created successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "get": {
        "tags": ["Accounts"],
        "summary": "List all accounts",
        "description": "List all existing accounts",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/accounts/{id}": {
      "get": {
        "tags": ["Accounts"],
        "summary": "Get account by id",
        "description": "Get existing account by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Account not found"
          }
        }
      },
      "put": {
        "tags": ["Accounts"],
        "summary": "Update account by id",
        "description": "Update existing account by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fullname": {
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string"
                  },
                  "role": {
                    "type": "string",
                    "enum": ["ADMIN", "USER"]
                  },
                  "phone": {
                    "type": "string",
                    "example": "6285123456789"
                  },
                  "address": {
                    "type": "string"
                  },
                  "birthdate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "company": {
                    "type": "string"
                  },
                  "gender": {
                    "type": "string",
                    "enum": ["LAKI_LAKI", "PEREMPUAN"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Account not found"
          }
        }
      },
      "delete": {
        "tags": ["Accounts"],
        "summary": "Delete account by id",
        "description": "Delete existing account by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Account not found"
          }
        }
      }
    },
    "/categories": {
      "post": {
        "tags": ["Categories"],
        "summary": "Create category",
        "description": "Create a new category",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                },
                "required": ["name"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Category created successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "get": {
        "tags": ["Categories"],
        "summary": "List all categories",
        "description": "List all existing categories",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/categories/{id}": {
      "get": {
        "tags": ["Categories"],
        "summary": "Get category by id",
        "description": "Get existing category by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Category not found"
          }
        }
      },
      "put": {
        "tags": ["Categories"],
        "summary": "Update category by id",
        "description": "Update existing category by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                },
                "required": ["name"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Category not found"
          }
        }
      },
      "delete": {
        "tags": ["Categories"],
        "summary": "Delete category by id",
        "description": "Delete existing category by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Category not found"
          }
        }
      }
    },
    "/sub-categories": {
      "post": {
        "tags": ["Sub Categories"],
        "summary": "Create sub category",
        "description": "Create a new sub category",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                },
                "required": ["name"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Sub category created successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "get": {
        "tags": ["Sub Categories"],
        "summary": "List all sub categories",
        "description": "List all existing sub categories",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/sub-categories/{id}": {
      "get": {
        "tags": ["Sub Categories"],
        "summary": "Get sub category by id",
        "description": "Get existing sub category by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Sub category not found"
          }
        }
      },
      "put": {
        "tags": ["Sub Categories"],
        "summary": "Update sub category by id",
        "description": "Update existing sub category by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                },
                "required": ["name"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Sub category not found"
          }
        }
      },
      "delete": {
        "tags": ["Sub Categories"],
        "summary": "Delete sub category by id",
        "description": "Delete existing sub category by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Sub category not found"
          }
        }
      }
    },
    "/webinars": {
      "post": {
        "tags": ["Webinars"],
        "summary": "Create webinar",
        "description": "Create a new webinar",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "startTime": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "endTime": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "eventStatus": {
                    "type": "string",
                    "enum": ["OFFLINE", "ONLINE"]
                  },
                  "maxAttendees": {
                    "type": "number",
                    "format": "int32"
                  },
                  "price": {
                    "type": "number",
                    "format": "double"
                  },
                  "categoryId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "subCategoryId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "banner": {
                    "type": "string",
                    "format": "binary"
                  }
                },
                "required": [
                  "title",
                  "description",
                  "startTime",
                  "endTime",
                  "eventStatus",
                  "maxAttendees",
                  "price",
                  "banner"
                ]
              },
              "encoding": {
                "banner": {
                  "contentType": "image/png, image/jpeg, image/jpg"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Webinar created successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "get": {
        "tags": ["Webinars"],
        "summary": "List all webinars",
        "description": "List all existing webinars",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/webinars/{id}": {
      "get": {
        "tags": ["Webinars"],
        "summary": "Get webinar by id",
        "description": "Get existing webinar by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Webinar not found"
          }
        }
      },
      "put": {
        "tags": ["Webinars"],
        "summary": "Update webinar by id",
        "description": "Update existing webinar by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "startTime": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "endTime": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "eventStatus": {
                    "type": "string",
                    "enum": ["OFFLINE", "ONLINE"]
                  },
                  "maxAttendees": {
                    "type": "number",
                    "format": "int32"
                  },
                  "price": {
                    "type": "number",
                    "format": "double"
                  },
                  "categoryId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "subCategoryId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "banner": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "banner": {
                  "contentType": "image/png, image/jpeg, image/jpg"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Webinar not found"
          }
        }
      },
      "delete": {
        "tags": ["Webinars"],
        "summary": "Delete webinar by id",
        "description": "Delete existing webinar by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Webinar not found"
          }
        }
      }
    },
    "/carts": {
      "post": {
        "tags": ["Carts"],
        "summary": "Create cart",
        "description": "Create a new cart",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": ["WEBINAR"]
                  },
                  "accountId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "productId": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                "required": ["type", "accountId", "productId"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Cart created successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "get": {
        "tags": ["Carts"],
        "summary": "List all carts",
        "description": "List all existing carts",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/carts/{id}": {
      "get": {
        "tags": ["Carts"],
        "summary": "Get cart by id",
        "description": "Get existing cart by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Cart not found"
          }
        }
      },
      "put": {
        "tags": ["Carts"],
        "summary": "Update cart by id",
        "description": "Update existing cart by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": ["WEBINAR"]
                  },
                  "accountId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "productId": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Cart not found"
          }
        }
      },
      "delete": {
        "tags": ["Carts"],
        "summary": "Delete cart by id",
        "description": "Delete existing cart by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Cart not found"
          }
        }
      }
    }
  }
}
